// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: delta/delta.proto

package delta

import (
	_ "github.com/dave/protod/google/protobuf"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Op_Type int32

const (
	Op_Null     Op_Type = 0
	Op_Set      Op_Type = 1 // set the value
	Op_Edit     Op_Type = 2 // modify a scalar value - quill, math etc.
	Op_Insert   Op_Type = 3 // insert at a specific location in a list
	Op_Move     Op_Type = 4 // move in a list
	Op_Rename   Op_Type = 5 // change the key in a map
	Op_Delete   Op_Type = 6 // delete from a list or map, or unset the value
	Op_Compound Op_Type = 7 // several operations combined into one
)

// Enum value maps for Op_Type.
var (
	Op_Type_name = map[int32]string{
		0: "Null",
		1: "Set",
		2: "Edit",
		3: "Insert",
		4: "Move",
		5: "Rename",
		6: "Delete",
		7: "Compound",
	}
	Op_Type_value = map[string]int32{
		"Null":     0,
		"Set":      1,
		"Edit":     2,
		"Insert":   3,
		"Move":     4,
		"Rename":   5,
		"Delete":   6,
		"Compound": 7,
	}
)

func (x Op_Type) Enum() *Op_Type {
	p := new(Op_Type)
	*p = x
	return p
}

func (x Op_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Op_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_delta_delta_proto_enumTypes[0].Descriptor()
}

func (Op_Type) Type() protoreflect.EnumType {
	return &file_delta_delta_proto_enumTypes[0]
}

func (x Op_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Op_Type.Descriptor instead.
func (Op_Type) EnumDescriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{0, 0}
}

type Op struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     Op_Type    `protobuf:"varint,1,opt,name=type,proto3,enum=delta.Op_Type" json:"type,omitempty"`
	Location []*Locator `protobuf:"bytes,2,rep,name=location,proto3" json:"location,omitempty"`
	Ops      []*Op      `protobuf:"bytes,3,rep,name=ops,proto3" json:"ops,omitempty"` // children for compound operations
	// Types that are assignable to Value:
	//	*Op_Scalar
	//	*Op_Message
	//	*Op_Object
	//	*Op_Delta
	//	*Op_Index
	//	*Op_Key
	Value isOp_Value `protobuf_oneof:"value"`
}

func (x *Op) Reset() {
	*x = Op{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Op) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Op) ProtoMessage() {}

func (x *Op) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Op.ProtoReflect.Descriptor instead.
func (*Op) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{0}
}

func (x *Op) GetType() Op_Type {
	if x != nil {
		return x.Type
	}
	return Op_Null
}

func (x *Op) GetLocation() []*Locator {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Op) GetOps() []*Op {
	if x != nil {
		return x.Ops
	}
	return nil
}

func (m *Op) GetValue() isOp_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Op) GetScalar() *Scalar {
	if x, ok := x.GetValue().(*Op_Scalar); ok {
		return x.Scalar
	}
	return nil
}

func (x *Op) GetMessage() *any.Any {
	if x, ok := x.GetValue().(*Op_Message); ok {
		return x.Message
	}
	return nil
}

func (x *Op) GetObject() *Object {
	if x, ok := x.GetValue().(*Op_Object); ok {
		return x.Object
	}
	return nil
}

func (x *Op) GetDelta() *Delta {
	if x, ok := x.GetValue().(*Op_Delta); ok {
		return x.Delta
	}
	return nil
}

func (x *Op) GetIndex() int64 {
	if x, ok := x.GetValue().(*Op_Index); ok {
		return x.Index
	}
	return 0
}

func (x *Op) GetKey() *Key {
	if x, ok := x.GetValue().(*Op_Key); ok {
		return x.Key
	}
	return nil
}

type isOp_Value interface {
	isOp_Value()
}

type Op_Scalar struct {
	Scalar *Scalar `protobuf:"bytes,4,opt,name=scalar,proto3,oneof"` // new value [Set, Insert]
}

type Op_Message struct {
	Message *any.Any `protobuf:"bytes,6,opt,name=message,proto3,oneof"` // new value [Set, Insert]
}

type Op_Object struct {
	Object *Object `protobuf:"bytes,7,opt,name=object,proto3,oneof"` // new value [Set, Insert]
}

type Op_Delta struct {
	Delta *Delta `protobuf:"bytes,8,opt,name=delta,proto3,oneof"` // modification of a scalar value - quill, math etc [Edit]
}

type Op_Index struct {
	Index int64 `protobuf:"varint,9,opt,name=index,proto3,oneof"` // new index [Move]
}

type Op_Key struct {
	Key *Key `protobuf:"bytes,10,opt,name=key,proto3,oneof"` // new key [Rename]
}

func (*Op_Scalar) isOp_Value() {}

func (*Op_Message) isOp_Value() {}

func (*Op_Object) isOp_Value() {}

func (*Op_Delta) isOp_Value() {}

func (*Op_Index) isOp_Value() {}

func (*Op_Key) isOp_Value() {}

type Locator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to V:
	//	*Locator_Field
	//	*Locator_Index
	//	*Locator_Key
	//	*Locator_Oneof
	V isLocator_V `protobuf_oneof:"v"`
}

func (x *Locator) Reset() {
	*x = Locator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Locator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Locator) ProtoMessage() {}

func (x *Locator) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Locator.ProtoReflect.Descriptor instead.
func (*Locator) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{1}
}

func (m *Locator) GetV() isLocator_V {
	if m != nil {
		return m.V
	}
	return nil
}

func (x *Locator) GetField() *Field {
	if x, ok := x.GetV().(*Locator_Field); ok {
		return x.Field
	}
	return nil
}

func (x *Locator) GetIndex() int64 {
	if x, ok := x.GetV().(*Locator_Index); ok {
		return x.Index
	}
	return 0
}

func (x *Locator) GetKey() *Key {
	if x, ok := x.GetV().(*Locator_Key); ok {
		return x.Key
	}
	return nil
}

func (x *Locator) GetOneof() *Oneof {
	if x, ok := x.GetV().(*Locator_Oneof); ok {
		return x.Oneof
	}
	return nil
}

type isLocator_V interface {
	isLocator_V()
}

type Locator_Field struct {
	Field *Field `protobuf:"bytes,1,opt,name=field,proto3,oneof"`
}

type Locator_Index struct {
	Index int64 `protobuf:"varint,2,opt,name=index,proto3,oneof"`
}

type Locator_Key struct {
	Key *Key `protobuf:"bytes,3,opt,name=key,proto3,oneof"`
}

type Locator_Oneof struct {
	Oneof *Oneof `protobuf:"bytes,4,opt,name=oneof,proto3,oneof"`
}

func (*Locator_Field) isLocator_V() {}

func (*Locator_Index) isLocator_V() {}

func (*Locator_Key) isLocator_V() {}

func (*Locator_Oneof) isLocator_V() {}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to V:
	//	*Key_Bool
	//	*Key_Int32
	//	*Key_Int64
	//	*Key_Uint32
	//	*Key_Uint64
	//	*Key_String_
	V isKey_V `protobuf_oneof:"v"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{2}
}

func (m *Key) GetV() isKey_V {
	if m != nil {
		return m.V
	}
	return nil
}

func (x *Key) GetBool() bool {
	if x, ok := x.GetV().(*Key_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Key) GetInt32() int32 {
	if x, ok := x.GetV().(*Key_Int32); ok {
		return x.Int32
	}
	return 0
}

func (x *Key) GetInt64() int64 {
	if x, ok := x.GetV().(*Key_Int64); ok {
		return x.Int64
	}
	return 0
}

func (x *Key) GetUint32() uint32 {
	if x, ok := x.GetV().(*Key_Uint32); ok {
		return x.Uint32
	}
	return 0
}

func (x *Key) GetUint64() uint64 {
	if x, ok := x.GetV().(*Key_Uint64); ok {
		return x.Uint64
	}
	return 0
}

func (x *Key) GetString_() string {
	if x, ok := x.GetV().(*Key_String_); ok {
		return x.String_
	}
	return ""
}

type isKey_V interface {
	isKey_V()
}

type Key_Bool struct {
	Bool bool `protobuf:"varint,1,opt,name=bool,proto3,oneof"`
}

type Key_Int32 struct {
	Int32 int32 `protobuf:"varint,2,opt,name=int32,proto3,oneof"`
}

type Key_Int64 struct {
	Int64 int64 `protobuf:"varint,3,opt,name=int64,proto3,oneof"`
}

type Key_Uint32 struct {
	Uint32 uint32 `protobuf:"varint,4,opt,name=uint32,proto3,oneof"`
}

type Key_Uint64 struct {
	Uint64 uint64 `protobuf:"varint,5,opt,name=uint64,proto3,oneof"`
}

type Key_String_ struct {
	String_ string `protobuf:"bytes,6,opt,name=string,proto3,oneof"`
}

func (*Key_Bool) isKey_V() {}

func (*Key_Int32) isKey_V() {}

func (*Key_Int64) isKey_V() {}

func (*Key_Uint32) isKey_V() {}

func (*Key_Uint64) isKey_V() {}

func (*Key_String_) isKey_V() {}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{3}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type Oneof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Fields []*Field `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *Oneof) Reset() {
	*x = Oneof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Oneof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oneof) ProtoMessage() {}

func (x *Oneof) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oneof.ProtoReflect.Descriptor instead.
func (*Oneof) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{4}
}

func (x *Oneof) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Oneof) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Scalar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to V:
	//	*Scalar_Double
	//	*Scalar_Float
	//	*Scalar_Int32
	//	*Scalar_Int64
	//	*Scalar_Uint32
	//	*Scalar_Uint64
	//	*Scalar_Sint32
	//	*Scalar_Sint64
	//	*Scalar_Fixed32
	//	*Scalar_Fixed64
	//	*Scalar_Sfixed32
	//	*Scalar_Sfixed64
	//	*Scalar_Bool
	//	*Scalar_String_
	//	*Scalar_Bytes
	//	*Scalar_Enum
	V isScalar_V `protobuf_oneof:"v"`
}

func (x *Scalar) Reset() {
	*x = Scalar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scalar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scalar) ProtoMessage() {}

func (x *Scalar) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scalar.ProtoReflect.Descriptor instead.
func (*Scalar) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{5}
}

func (m *Scalar) GetV() isScalar_V {
	if m != nil {
		return m.V
	}
	return nil
}

func (x *Scalar) GetDouble() float64 {
	if x, ok := x.GetV().(*Scalar_Double); ok {
		return x.Double
	}
	return 0
}

func (x *Scalar) GetFloat() float32 {
	if x, ok := x.GetV().(*Scalar_Float); ok {
		return x.Float
	}
	return 0
}

func (x *Scalar) GetInt32() int32 {
	if x, ok := x.GetV().(*Scalar_Int32); ok {
		return x.Int32
	}
	return 0
}

func (x *Scalar) GetInt64() int64 {
	if x, ok := x.GetV().(*Scalar_Int64); ok {
		return x.Int64
	}
	return 0
}

func (x *Scalar) GetUint32() uint32 {
	if x, ok := x.GetV().(*Scalar_Uint32); ok {
		return x.Uint32
	}
	return 0
}

func (x *Scalar) GetUint64() uint64 {
	if x, ok := x.GetV().(*Scalar_Uint64); ok {
		return x.Uint64
	}
	return 0
}

func (x *Scalar) GetSint32() int32 {
	if x, ok := x.GetV().(*Scalar_Sint32); ok {
		return x.Sint32
	}
	return 0
}

func (x *Scalar) GetSint64() int64 {
	if x, ok := x.GetV().(*Scalar_Sint64); ok {
		return x.Sint64
	}
	return 0
}

func (x *Scalar) GetFixed32() uint32 {
	if x, ok := x.GetV().(*Scalar_Fixed32); ok {
		return x.Fixed32
	}
	return 0
}

func (x *Scalar) GetFixed64() uint64 {
	if x, ok := x.GetV().(*Scalar_Fixed64); ok {
		return x.Fixed64
	}
	return 0
}

func (x *Scalar) GetSfixed32() int32 {
	if x, ok := x.GetV().(*Scalar_Sfixed32); ok {
		return x.Sfixed32
	}
	return 0
}

func (x *Scalar) GetSfixed64() int64 {
	if x, ok := x.GetV().(*Scalar_Sfixed64); ok {
		return x.Sfixed64
	}
	return 0
}

func (x *Scalar) GetBool() bool {
	if x, ok := x.GetV().(*Scalar_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Scalar) GetString_() string {
	if x, ok := x.GetV().(*Scalar_String_); ok {
		return x.String_
	}
	return ""
}

func (x *Scalar) GetBytes() []byte {
	if x, ok := x.GetV().(*Scalar_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *Scalar) GetEnum() int32 {
	if x, ok := x.GetV().(*Scalar_Enum); ok {
		return x.Enum
	}
	return 0
}

type isScalar_V interface {
	isScalar_V()
}

type Scalar_Double struct {
	Double float64 `protobuf:"fixed64,1,opt,name=double,proto3,oneof"`
}

type Scalar_Float struct {
	Float float32 `protobuf:"fixed32,2,opt,name=float,proto3,oneof"`
}

type Scalar_Int32 struct {
	Int32 int32 `protobuf:"varint,3,opt,name=int32,proto3,oneof"`
}

type Scalar_Int64 struct {
	Int64 int64 `protobuf:"varint,4,opt,name=int64,proto3,oneof"`
}

type Scalar_Uint32 struct {
	Uint32 uint32 `protobuf:"varint,5,opt,name=uint32,proto3,oneof"`
}

type Scalar_Uint64 struct {
	Uint64 uint64 `protobuf:"varint,6,opt,name=uint64,proto3,oneof"`
}

type Scalar_Sint32 struct {
	Sint32 int32 `protobuf:"zigzag32,7,opt,name=sint32,proto3,oneof"`
}

type Scalar_Sint64 struct {
	Sint64 int64 `protobuf:"zigzag64,8,opt,name=sint64,proto3,oneof"`
}

type Scalar_Fixed32 struct {
	Fixed32 uint32 `protobuf:"fixed32,9,opt,name=fixed32,proto3,oneof"`
}

type Scalar_Fixed64 struct {
	Fixed64 uint64 `protobuf:"fixed64,10,opt,name=fixed64,proto3,oneof"`
}

type Scalar_Sfixed32 struct {
	Sfixed32 int32 `protobuf:"fixed32,11,opt,name=sfixed32,proto3,oneof"`
}

type Scalar_Sfixed64 struct {
	Sfixed64 int64 `protobuf:"fixed64,12,opt,name=sfixed64,proto3,oneof"`
}

type Scalar_Bool struct {
	Bool bool `protobuf:"varint,13,opt,name=bool,proto3,oneof"`
}

type Scalar_String_ struct {
	String_ string `protobuf:"bytes,14,opt,name=string,proto3,oneof"`
}

type Scalar_Bytes struct {
	Bytes []byte `protobuf:"bytes,15,opt,name=bytes,proto3,oneof"`
}

type Scalar_Enum struct {
	Enum int32 `protobuf:"varint,16,opt,name=enum,proto3,oneof"`
}

func (*Scalar_Double) isScalar_V() {}

func (*Scalar_Float) isScalar_V() {}

func (*Scalar_Int32) isScalar_V() {}

func (*Scalar_Int64) isScalar_V() {}

func (*Scalar_Uint32) isScalar_V() {}

func (*Scalar_Uint64) isScalar_V() {}

func (*Scalar_Sint32) isScalar_V() {}

func (*Scalar_Sint64) isScalar_V() {}

func (*Scalar_Fixed32) isScalar_V() {}

func (*Scalar_Fixed64) isScalar_V() {}

func (*Scalar_Sfixed32) isScalar_V() {}

func (*Scalar_Sfixed64) isScalar_V() {}

func (*Scalar_Bool) isScalar_V() {}

func (*Scalar_String_) isScalar_V() {}

func (*Scalar_Bytes) isScalar_V() {}

func (*Scalar_Enum) isScalar_V() {}

type Delta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to V:
	//	*Delta_Quill
	V isDelta_V `protobuf_oneof:"v"`
}

func (x *Delta) Reset() {
	*x = Delta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delta) ProtoMessage() {}

func (x *Delta) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delta.ProtoReflect.Descriptor instead.
func (*Delta) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{6}
}

func (m *Delta) GetV() isDelta_V {
	if m != nil {
		return m.V
	}
	return nil
}

func (x *Delta) GetQuill() *QuillDelta {
	if x, ok := x.GetV().(*Delta_Quill); ok {
		return x.Quill
	}
	return nil
}

type isDelta_V interface {
	isDelta_V()
}

type Delta_Quill struct {
	Quill *QuillDelta `protobuf:"bytes,1,opt,name=quill,proto3,oneof"` // TODO: add math operations for numeric values - just ADD?
}

func (*Delta_Quill) isDelta_V() {}

type QuillDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ops []*Quill `protobuf:"bytes,1,rep,name=ops,proto3" json:"ops,omitempty"`
}

func (x *QuillDelta) Reset() {
	*x = QuillDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuillDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuillDelta) ProtoMessage() {}

func (x *QuillDelta) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuillDelta.ProtoReflect.Descriptor instead.
func (*QuillDelta) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{7}
}

func (x *QuillDelta) GetOps() []*Quill {
	if x != nil {
		return x.Ops
	}
	return nil
}

type Quill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to V:
	//	*Quill_Insert
	//	*Quill_Retain
	//	*Quill_Delete
	V          isQuill_V `protobuf_oneof:"v"`
	Attributes *Object   `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Quill) Reset() {
	*x = Quill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quill) ProtoMessage() {}

func (x *Quill) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quill.ProtoReflect.Descriptor instead.
func (*Quill) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{8}
}

func (m *Quill) GetV() isQuill_V {
	if m != nil {
		return m.V
	}
	return nil
}

func (x *Quill) GetInsert() string {
	if x, ok := x.GetV().(*Quill_Insert); ok {
		return x.Insert
	}
	return ""
}

func (x *Quill) GetRetain() int64 {
	if x, ok := x.GetV().(*Quill_Retain); ok {
		return x.Retain
	}
	return 0
}

func (x *Quill) GetDelete() int64 {
	if x, ok := x.GetV().(*Quill_Delete); ok {
		return x.Delete
	}
	return 0
}

func (x *Quill) GetAttributes() *Object {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type isQuill_V interface {
	isQuill_V()
}

type Quill_Insert struct {
	Insert string `protobuf:"bytes,1,opt,name=insert,proto3,oneof"` // text inserted (utf-8)
}

type Quill_Retain struct {
	Retain int64 `protobuf:"varint,2,opt,name=retain,proto3,oneof"` // length of text retained - note: this counts unicode codepoints, not bytes or grapheme clusters TODO: check this works cross platform
}

type Quill_Delete struct {
	Delete int64 `protobuf:"varint,3,opt,name=delete,proto3,oneof"` // length of text deleted - note: this counts unicode codepoints, not bytes or grapheme clusters TODO: check this works cross platform
}

func (*Quill_Insert) isQuill_V() {}

func (*Quill_Retain) isQuill_V() {}

func (*Quill_Delete) isQuill_V() {}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to V:
	//	*Object_Scalar
	//	*Object_Message
	//	*Object_List
	//	*Object_MapBool
	//	*Object_MapInt32
	//	*Object_MapInt64
	//	*Object_MapUint32
	//	*Object_MapUint64
	//	*Object_MapString
	V isObject_V `protobuf_oneof:"v"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{9}
}

func (m *Object) GetV() isObject_V {
	if m != nil {
		return m.V
	}
	return nil
}

func (x *Object) GetScalar() *Scalar {
	if x, ok := x.GetV().(*Object_Scalar); ok {
		return x.Scalar
	}
	return nil
}

func (x *Object) GetMessage() *any.Any {
	if x, ok := x.GetV().(*Object_Message); ok {
		return x.Message
	}
	return nil
}

func (x *Object) GetList() *List {
	if x, ok := x.GetV().(*Object_List); ok {
		return x.List
	}
	return nil
}

func (x *Object) GetMapBool() *MapBool {
	if x, ok := x.GetV().(*Object_MapBool); ok {
		return x.MapBool
	}
	return nil
}

func (x *Object) GetMapInt32() *MapInt32 {
	if x, ok := x.GetV().(*Object_MapInt32); ok {
		return x.MapInt32
	}
	return nil
}

func (x *Object) GetMapInt64() *MapInt64 {
	if x, ok := x.GetV().(*Object_MapInt64); ok {
		return x.MapInt64
	}
	return nil
}

func (x *Object) GetMapUint32() *MapUint32 {
	if x, ok := x.GetV().(*Object_MapUint32); ok {
		return x.MapUint32
	}
	return nil
}

func (x *Object) GetMapUint64() *MapUint64 {
	if x, ok := x.GetV().(*Object_MapUint64); ok {
		return x.MapUint64
	}
	return nil
}

func (x *Object) GetMapString() *MapString {
	if x, ok := x.GetV().(*Object_MapString); ok {
		return x.MapString
	}
	return nil
}

type isObject_V interface {
	isObject_V()
}

type Object_Scalar struct {
	Scalar *Scalar `protobuf:"bytes,1,opt,name=scalar,proto3,oneof"`
}

type Object_Message struct {
	Message *any.Any `protobuf:"bytes,2,opt,name=message,proto3,oneof"`
}

type Object_List struct {
	List *List `protobuf:"bytes,3,opt,name=list,proto3,oneof"`
}

type Object_MapBool struct {
	MapBool *MapBool `protobuf:"bytes,4,opt,name=mapBool,proto3,oneof"`
}

type Object_MapInt32 struct {
	MapInt32 *MapInt32 `protobuf:"bytes,5,opt,name=mapInt32,proto3,oneof"`
}

type Object_MapInt64 struct {
	MapInt64 *MapInt64 `protobuf:"bytes,6,opt,name=mapInt64,proto3,oneof"`
}

type Object_MapUint32 struct {
	MapUint32 *MapUint32 `protobuf:"bytes,7,opt,name=mapUint32,proto3,oneof"`
}

type Object_MapUint64 struct {
	MapUint64 *MapUint64 `protobuf:"bytes,8,opt,name=mapUint64,proto3,oneof"`
}

type Object_MapString struct {
	MapString *MapString `protobuf:"bytes,9,opt,name=mapString,proto3,oneof"`
}

func (*Object_Scalar) isObject_V() {}

func (*Object_Message) isObject_V() {}

func (*Object_List) isObject_V() {}

func (*Object_MapBool) isObject_V() {}

func (*Object_MapInt32) isObject_V() {}

func (*Object_MapInt64) isObject_V() {}

func (*Object_MapUint32) isObject_V() {}

func (*Object_MapUint64) isObject_V() {}

func (*Object_MapString) isObject_V() {}

type MapBool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[bool]*Object `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapBool) Reset() {
	*x = MapBool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapBool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapBool) ProtoMessage() {}

func (x *MapBool) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapBool.ProtoReflect.Descriptor instead.
func (*MapBool) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{10}
}

func (x *MapBool) GetMap() map[bool]*Object {
	if x != nil {
		return x.Map
	}
	return nil
}

type MapInt32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[int32]*Object `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapInt32) Reset() {
	*x = MapInt32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapInt32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapInt32) ProtoMessage() {}

func (x *MapInt32) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapInt32.ProtoReflect.Descriptor instead.
func (*MapInt32) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{11}
}

func (x *MapInt32) GetMap() map[int32]*Object {
	if x != nil {
		return x.Map
	}
	return nil
}

type MapInt64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[int64]*Object `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapInt64) Reset() {
	*x = MapInt64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapInt64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapInt64) ProtoMessage() {}

func (x *MapInt64) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapInt64.ProtoReflect.Descriptor instead.
func (*MapInt64) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{12}
}

func (x *MapInt64) GetMap() map[int64]*Object {
	if x != nil {
		return x.Map
	}
	return nil
}

type MapUint32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[uint32]*Object `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapUint32) Reset() {
	*x = MapUint32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapUint32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapUint32) ProtoMessage() {}

func (x *MapUint32) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapUint32.ProtoReflect.Descriptor instead.
func (*MapUint32) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{13}
}

func (x *MapUint32) GetMap() map[uint32]*Object {
	if x != nil {
		return x.Map
	}
	return nil
}

type MapUint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[uint64]*Object `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapUint64) Reset() {
	*x = MapUint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapUint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapUint64) ProtoMessage() {}

func (x *MapUint64) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapUint64.ProtoReflect.Descriptor instead.
func (*MapUint64) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{14}
}

func (x *MapUint64) GetMap() map[uint64]*Object {
	if x != nil {
		return x.Map
	}
	return nil
}

type MapString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[string]*Object `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapString) Reset() {
	*x = MapString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapString) ProtoMessage() {}

func (x *MapString) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapString.ProtoReflect.Descriptor instead.
func (*MapString) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{15}
}

func (x *MapString) GetMap() map[string]*Object {
	if x != nil {
		return x.Map
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Object `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delta_delta_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_delta_delta_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_delta_delta_proto_rawDescGZIP(), []int{16}
}

func (x *List) GetList() []*Object {
	if x != nil {
		return x.List
	}
	return nil
}

var File_delta_delta_proto protoreflect.FileDescriptor

var file_delta_delta_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x1a, 0x22, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x61, 0x72, 0x74,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x03, 0x0a, 0x02, 0x4f, 0x70,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x03, 0x6f, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x52, 0x03, 0x6f, 0x70, 0x73, 0x12, 0x27, 0x0a,
	0x06, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x24, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1e, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x5f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x75, 0x6c, 0x6c, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x64,
	0x69, 0x74, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x10, 0x03,
	0x12, 0x08, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x07,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x07, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66,
	0x48, 0x00, 0x52, 0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x03, 0x0a, 0x01, 0x76, 0x22, 0x9e,
	0x01, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x03, 0x0a, 0x01, 0x76, 0x22,
	0x33, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x05, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xa9, 0x03, 0x0a, 0x06, 0x53, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x05,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x18,
	0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x12, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x07,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x48, 0x00, 0x52,
	0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x12, 0x1c, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x48, 0x00, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x12, 0x1c, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x10, 0x48, 0x00, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x42, 0x03,
	0x0a, 0x01, 0x76, 0x22, 0x37, 0x0a, 0x05, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x05,
	0x71, 0x75, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x05, 0x71, 0x75, 0x69, 0x6c, 0x6c, 0x42, 0x03, 0x0a, 0x01, 0x76, 0x22, 0x2c, 0x0a, 0x0a,
	0x51, 0x75, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x03, 0x6f, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e,
	0x51, 0x75, 0x69, 0x6c, 0x6c, 0x52, 0x03, 0x6f, 0x70, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x05, 0x51,
	0x75, 0x69, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x18,
	0x0a, 0x06, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x06, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x42, 0x03, 0x0a, 0x01, 0x76, 0x22, 0xab, 0x03, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x42, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x42, 0x6f, 0x6f, 0x6c,
	0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x2d, 0x0a, 0x08, 0x6d,
	0x61, 0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x48, 0x00,
	0x52, 0x08, 0x6d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x61,
	0x70, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x48, 0x00, 0x52,
	0x08, 0x6d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x30, 0x0a, 0x09, 0x6d, 0x61, 0x70,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x48, 0x00,
	0x52, 0x09, 0x6d, 0x61, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x30, 0x0a, 0x09, 0x6d,
	0x61, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x30, 0x0a,
	0x09, 0x6d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42,
	0x03, 0x0a, 0x01, 0x76, 0x22, 0x7b, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x42, 0x6f, 0x6f, 0x6c, 0x12,
	0x29, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x42, 0x6f, 0x6f, 0x6c, 0x2e, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x45, 0x0a, 0x08, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x7d, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x2a, 0x0a,
	0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x2e, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x45, 0x0a, 0x08, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x7d, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x2a, 0x0a, 0x03,
	0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x2e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x45, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x7f, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x2b, 0x0a, 0x03,
	0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x2e, 0x4d, 0x61, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x2e, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x45, 0x0a, 0x08, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x7f, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x2b, 0x0a,
	0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x2e, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x45, 0x0a, 0x08, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x7f, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2b,
	0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x45, 0x0a, 0x08, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x29, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x2d, 0x5a,
	0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x76, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x2f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x3b, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x8a, 0x43, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_delta_delta_proto_rawDescOnce sync.Once
	file_delta_delta_proto_rawDescData = file_delta_delta_proto_rawDesc
)

func file_delta_delta_proto_rawDescGZIP() []byte {
	file_delta_delta_proto_rawDescOnce.Do(func() {
		file_delta_delta_proto_rawDescData = protoimpl.X.CompressGZIP(file_delta_delta_proto_rawDescData)
	})
	return file_delta_delta_proto_rawDescData
}

var file_delta_delta_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_delta_delta_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_delta_delta_proto_goTypes = []interface{}{
	(Op_Type)(0),       // 0: delta.Op.Type
	(*Op)(nil),         // 1: delta.Op
	(*Locator)(nil),    // 2: delta.Locator
	(*Key)(nil),        // 3: delta.Key
	(*Field)(nil),      // 4: delta.Field
	(*Oneof)(nil),      // 5: delta.Oneof
	(*Scalar)(nil),     // 6: delta.Scalar
	(*Delta)(nil),      // 7: delta.Delta
	(*QuillDelta)(nil), // 8: delta.QuillDelta
	(*Quill)(nil),      // 9: delta.Quill
	(*Object)(nil),     // 10: delta.Object
	(*MapBool)(nil),    // 11: delta.MapBool
	(*MapInt32)(nil),   // 12: delta.MapInt32
	(*MapInt64)(nil),   // 13: delta.MapInt64
	(*MapUint32)(nil),  // 14: delta.MapUint32
	(*MapUint64)(nil),  // 15: delta.MapUint64
	(*MapString)(nil),  // 16: delta.MapString
	(*List)(nil),       // 17: delta.List
	nil,                // 18: delta.MapBool.MapEntry
	nil,                // 19: delta.MapInt32.MapEntry
	nil,                // 20: delta.MapInt64.MapEntry
	nil,                // 21: delta.MapUint32.MapEntry
	nil,                // 22: delta.MapUint64.MapEntry
	nil,                // 23: delta.MapString.MapEntry
	(*any.Any)(nil),    // 24: google.protobuf.Any
}
var file_delta_delta_proto_depIdxs = []int32{
	0,  // 0: delta.Op.type:type_name -> delta.Op.Type
	2,  // 1: delta.Op.location:type_name -> delta.Locator
	1,  // 2: delta.Op.ops:type_name -> delta.Op
	6,  // 3: delta.Op.scalar:type_name -> delta.Scalar
	24, // 4: delta.Op.message:type_name -> google.protobuf.Any
	10, // 5: delta.Op.object:type_name -> delta.Object
	7,  // 6: delta.Op.delta:type_name -> delta.Delta
	3,  // 7: delta.Op.key:type_name -> delta.Key
	4,  // 8: delta.Locator.field:type_name -> delta.Field
	3,  // 9: delta.Locator.key:type_name -> delta.Key
	5,  // 10: delta.Locator.oneof:type_name -> delta.Oneof
	4,  // 11: delta.Oneof.fields:type_name -> delta.Field
	8,  // 12: delta.Delta.quill:type_name -> delta.QuillDelta
	9,  // 13: delta.QuillDelta.ops:type_name -> delta.Quill
	10, // 14: delta.Quill.attributes:type_name -> delta.Object
	6,  // 15: delta.Object.scalar:type_name -> delta.Scalar
	24, // 16: delta.Object.message:type_name -> google.protobuf.Any
	17, // 17: delta.Object.list:type_name -> delta.List
	11, // 18: delta.Object.mapBool:type_name -> delta.MapBool
	12, // 19: delta.Object.mapInt32:type_name -> delta.MapInt32
	13, // 20: delta.Object.mapInt64:type_name -> delta.MapInt64
	14, // 21: delta.Object.mapUint32:type_name -> delta.MapUint32
	15, // 22: delta.Object.mapUint64:type_name -> delta.MapUint64
	16, // 23: delta.Object.mapString:type_name -> delta.MapString
	18, // 24: delta.MapBool.map:type_name -> delta.MapBool.MapEntry
	19, // 25: delta.MapInt32.map:type_name -> delta.MapInt32.MapEntry
	20, // 26: delta.MapInt64.map:type_name -> delta.MapInt64.MapEntry
	21, // 27: delta.MapUint32.map:type_name -> delta.MapUint32.MapEntry
	22, // 28: delta.MapUint64.map:type_name -> delta.MapUint64.MapEntry
	23, // 29: delta.MapString.map:type_name -> delta.MapString.MapEntry
	10, // 30: delta.List.list:type_name -> delta.Object
	10, // 31: delta.MapBool.MapEntry.value:type_name -> delta.Object
	10, // 32: delta.MapInt32.MapEntry.value:type_name -> delta.Object
	10, // 33: delta.MapInt64.MapEntry.value:type_name -> delta.Object
	10, // 34: delta.MapUint32.MapEntry.value:type_name -> delta.Object
	10, // 35: delta.MapUint64.MapEntry.value:type_name -> delta.Object
	10, // 36: delta.MapString.MapEntry.value:type_name -> delta.Object
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_delta_delta_proto_init() }
func file_delta_delta_proto_init() {
	if File_delta_delta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_delta_delta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Op); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Locator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Oneof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scalar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuillDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapBool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapInt32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapInt64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapUint32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapUint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delta_delta_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_delta_delta_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Op_Scalar)(nil),
		(*Op_Message)(nil),
		(*Op_Object)(nil),
		(*Op_Delta)(nil),
		(*Op_Index)(nil),
		(*Op_Key)(nil),
	}
	file_delta_delta_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Locator_Field)(nil),
		(*Locator_Index)(nil),
		(*Locator_Key)(nil),
		(*Locator_Oneof)(nil),
	}
	file_delta_delta_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Key_Bool)(nil),
		(*Key_Int32)(nil),
		(*Key_Int64)(nil),
		(*Key_Uint32)(nil),
		(*Key_Uint64)(nil),
		(*Key_String_)(nil),
	}
	file_delta_delta_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Scalar_Double)(nil),
		(*Scalar_Float)(nil),
		(*Scalar_Int32)(nil),
		(*Scalar_Int64)(nil),
		(*Scalar_Uint32)(nil),
		(*Scalar_Uint64)(nil),
		(*Scalar_Sint32)(nil),
		(*Scalar_Sint64)(nil),
		(*Scalar_Fixed32)(nil),
		(*Scalar_Fixed64)(nil),
		(*Scalar_Sfixed32)(nil),
		(*Scalar_Sfixed64)(nil),
		(*Scalar_Bool)(nil),
		(*Scalar_String_)(nil),
		(*Scalar_Bytes)(nil),
		(*Scalar_Enum)(nil),
	}
	file_delta_delta_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Delta_Quill)(nil),
	}
	file_delta_delta_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Quill_Insert)(nil),
		(*Quill_Retain)(nil),
		(*Quill_Delete)(nil),
	}
	file_delta_delta_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Object_Scalar)(nil),
		(*Object_Message)(nil),
		(*Object_List)(nil),
		(*Object_MapBool)(nil),
		(*Object_MapInt32)(nil),
		(*Object_MapInt64)(nil),
		(*Object_MapUint32)(nil),
		(*Object_MapUint64)(nil),
		(*Object_MapString)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_delta_delta_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_delta_delta_proto_goTypes,
		DependencyIndexes: file_delta_delta_proto_depIdxs,
		EnumInfos:         file_delta_delta_proto_enumTypes,
		MessageInfos:      file_delta_delta_proto_msgTypes,
	}.Build()
	File_delta_delta_proto = out.File
	file_delta_delta_proto_rawDesc = nil
	file_delta_delta_proto_goTypes = nil
	file_delta_delta_proto_depIdxs = nil
}
